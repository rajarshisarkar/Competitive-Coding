#include <cstdio>
using namespace std;
// [col][row]
int main() {
	int r, f, s, x, y, k, t, dep[20][2], tot[20][2];
	dep[0][0] = dep[1][1] = tot[0][0] = 1;    
	dep[0][1] = dep[1][0] = tot[0][1] = 0;
	/*DEP
	[1][0][][][][][][][][][][][][][][][][][][]
	[0][1][][][][][][][][][][][][][][][][][][]
    */
    /*TOT
	[1][][][][][][][][][][][][][][][][][][][]
	[0][][][][][][][][][][][][][][][][][][][]
    */
    
	
	for(r = 2; r < 20; r++) {
		dep[r][0] = dep[r-1][0] + dep[r-2][0];
		dep[r][1] = dep[r-1][1] + dep[r-2][1];
	}
	for(r = 1; r < 20; r++) {
		tot[r][0] = tot[r-1][0] + dep[r][0];
		tot[r][1] = tot[r-1][1] + dep[r][1];
	}
	
	/*DEP
	[1][0][1][1][2][3][5][8][13][21][34][55][89][144][233][377][610][987][1597][2584]
	[0][1][1][2][3][5][8][13][21][34][55][89][144][233][377][610][987][1597][2584][4181]
    */
    /*TOT
	[1][1][2][3][5][8][13][21][34][55][89][144][233][377][610][987][1597][2584][4181][6765]
	[0][1][2][4][7][12][20][33][54][88][143][232][376][609][986][1596][2583][4180][6764][10945]
    */
	while(scanf("%d", &r)==1 && r) { // r is the duration
		scanf("%d%d", &k, &t); // k is the unique multiplier // t is the amount deposited
		f = tot[r-1][0]; 
		s = tot[r-1][1];
		for(x = 1; (t-f*x) % s; x++);
		y = (t-f*x) / s;
		printf("%d %d %d\n", x, y, k * (x*dep[r-1][0] + y*dep[r-1][1]));
	}
	return 0;
}
